<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>

<style>
    .pagination-sticky {
        position: sticky;
        bottom: 0;
        background-color: white;
        padding: 0.5rem 0;
        z-index: 10;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
    }

    .col-md-3 .overflow-auto {
        padding-bottom: 70px;
        /* laisse de la place pour la pagination */
    }

    /* Popover personnalisé */
    .blocpopover {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-height: 80vh;
        width: 60%;
        background-color: white;
        z-index: 1050;
        border-radius: 0.5rem;
        overflow-y: auto;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        display: none;
        /* caché par défaut */
        padding: 1rem;
    }

    /* Fond semi-transparent */
    #popover-background {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.4);
        z-index: 1040;
        display: none;
    }

    /* En-tête de la modal */
    .blocpopover .popover-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #6c757d;
        color: white;
        padding: 0.5rem 1rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        position: sticky;
        top: 0;
        z-index: 1;
    }

    /* Tabs Bootstrap */
    .blocpopover .nav-tabs {
        margin-bottom: 1rem;
    }
</style>



<?= $this->partial('francetravailnew/partials/dashboardoffcanvas.phtml', [
    'currentProjet'       => $this->currentProjet,
    'offresData'          => $this->offresData,
    'metiersData'         => $this->metiersData,
    'servicesData'        => $this->servicesData,
    'entreprisesData'     => $this->entreprisesData,
    'totalOffreData'      => $this->totalOffreData,
    'totalMetiersData'    => $this->totalMetiersData,
    'totalServicesData'   => $this->totalServicesData,
    'totalEntreprisesData' => $this->totalEntreprisesData,
]) ?>


<!-- <pre>
<?= var_dump([
    'currentProjet'       => $this->currentProjet,
    'offresData'          => $this->offresData,
    'metiersData'         => $this->metiersData,
    'servicesData'        => $this->servicesData,
    'entreprisesData'     => $this->entreprisesData,
    'totalOffreData'      => $this->totalOffreData,
    'totalMetiersData'    => $this->totalMetiersData,
    'totalServicesData'   => $this->totalServicesData,
    'totalEntreprisesData' => $this->totalEntreprisesData,
]); ?>
</pre> -->





<!-- Filtres modernisés qui tiennent sur une ligne-->
<div class="card shadow-sm mb-4 border-0">

    <div class="card-body">
        <form method="get" class="d-flex flex-nowrap align-items-end gap-3 overflow-auto">

            <div style="min-width:220px;">
                <label class="form-label text-muted">Projet</label>
                <select id="selectProjet" class="form-select shadow-sm">
                    <option value="">-- Choisir un projet --</option>
                    <?php foreach ($this->projet as $nom => $data): ?>
                        <option value="<?= htmlspecialchars(json_encode(array_merge($data, ['nomProjet' => $nom]))) ?>">
                            <?= $this->escape($nom) ?>
                        </option>
                    <?php endforeach; ?>
                </select>

            </div>

            <div style="min-width:220px;">
                <label class="form-label text-muted">Mots-clés</label>
                <div class="input-group shadow-sm">
                    <span class="input-group-text bg-white"><i class="bi bi-search"></i></span>
                    <input type="text" name="motsCles" id="motsCles" class="form-control border-start-0"
                        value="<?= $this->escape($this->params['motsCles'] ?? '') ?>">
                </div>
            </div>

            <div style="min-width:180px;">
                <label class="form-label text-muted">Code Insee</label>
                <div class="input-group shadow-sm">
                    <span class="input-group-text bg-white"><i class="bi bi-geo-alt"></i></span>
                    <input type="text" name="commune" id="commune" class="form-control border-start-0"
                        value="<?= $this->escape($this->params['commune'] ?? '') ?>">
                </div>
            </div>

            <div style="min-width:180px;">
                <label class="form-label text-muted">Distance (km)</label>
                <div class="input-group shadow-sm">
                    <span class="input-group-text bg-white"><i class="bi bi-arrows-expand"></i></span>
                    <input type="number" name="distance" class="form-control border-start-0"
                        value="<?= $this->escape($this->params['distance'] ?? 100) ?>" min="0">
                </div>
            </div>

            <?php foreach ($this->filtresDynamiques as $filtreNom => $valeurs): ?>
                <div style="min-width:180px;">
                    <label class="form-label text-muted"><?= ucfirst($this->escape($filtreNom)) ?></label>
                    <select name="<?= $this->escape($filtreNom) ?>" class="form-select shadow-sm">
                        <option value="">Tous</option>
                        <?php foreach ($valeurs as $code => $libelle): ?>
                            <option value="<?= $this->escape($code) ?>"
                                <?= ($this->escape($this->params[$filtreNom] ?? '') === $code) ? 'selected' : '' ?>>
                                <?= $this->escape($libelle) ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
            <?php endforeach; ?>

            <div class="d-grid" style="min-width:150px;">
                <button type="submit" class="btn btn-secondary shadow-sm">
                    <i class="bi bi-funnel"></i> Rechercher
                </button>
            </div>
        </form>
    </div>
</div>



<div class="row">
    <!-- Offres -->
    <div class="col-md-3 position-relative" style="max-height:80vh">
        <?php if (!empty($this->offres)): ?>
            <div class="d-flex flex-column gap-3 overflow-auto" style="max-height:80vh;">
                <?php foreach ($this->offres as $idx => $offre): ?>
                    <?php
                    $desc = $offre['description'] ?? '';
                    $descTronquee = strlen($desc) > 120 ? substr($desc, 0, 120) . '...' : $desc;
                    ?>
                    <div class="card shadow-sm" data-offre-idx="<?= $idx ?>">
                        <div class="card-body d-flex justify-content-between">
                            <div>
                                <h5 class="card-title text-primary"><?= $this->escape($offre['intitule'] ?? '') ?></h5>
                                <p class="card-text small text-muted">
                                    <?= $this->escape($descTronquee) ?>
                                    <?php if (strlen($desc) > 120): ?>
                                        <button type="button" class="btn btn-link btn-sm p-0 lire-suite-btn"
                                            data-offre-idx="<?= $idx ?>">
                                            Lire la suite
                                        </button>
                                    <?php endif; ?>
                                </p>

                                <!-- Popover personnalisé avec onglets -->
                                <div id="customPopover-<?= $idx ?>" class="blocpopover">
                                    <div class="popover-header">
                                        <span>Détails de l'offre</span>
                                        <button type="button" class="btn-close btn-close-white fermer-popover"></button>
                                    </div>
                                    <div class="p-3">
                                        <!-- Onglets Infos / Description -->
                                        <ul class="nav nav-tabs" id="offreTabs-<?= $idx ?>" role="tablist">
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link active" id="infos-tab-<?= $idx ?>" data-bs-toggle="tab"
                                                    data-bs-target="#infos-<?= $idx ?>" type="button" role="tab">Infos</button>
                                            </li>
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link" id="desc-tab-<?= $idx ?>" data-bs-toggle="tab"
                                                    data-bs-target="#desc-<?= $idx ?>" type="button"
                                                    role="tab">Description</button>
                                            </li>
                                        </ul>

                                        <div class="tab-content border p-3">
                                            <!-- Onglet Infos -->
                                            <div class="tab-pane fade show active" id="infos-<?= $idx ?>" role="tabpanel"
                                                aria-labelledby="infos-tab-<?= $idx ?>">
                                                <h5 class="text-primary">
                                                    <?= $this->escape($offre['intitule'] ?? 'Sans intitulé') ?></h5>
                                                <p><strong>Entreprise :</strong>
                                                    <?= $this->escape($offre['entreprise']['nom'] ?? 'N/A') ?></p>
                                                <p><strong>Lieu :</strong>
                                                    <?= $this->escape($offre['lieuTravail']['libelle'] ?? 'N/A') ?></p>
                                                <p><strong>Type de contrat :</strong>
                                                    <?= $this->escape($offre['typeContrat'] ?? 'N/A') ?></p>
                                                <p><strong>Expérience :</strong>
                                                    <?= $this->escape($offre['experience'] ?? 'N/A') ?> |
                                                    <strong>Qualification :</strong>
                                                    <?= $this->escape($offre['qualification'] ?? 'N/A') ?>
                                                </p>
                                                <p><strong>Publié :</strong>
                                                    <?= !empty($offre['dateCreation']) ? date('d/m/Y', strtotime($offre['dateCreation'])) : 'N/A' ?>
                                                    |
                                                    <strong>Actualisé :</strong>
                                                    <?= !empty($offre['dateActualisation']) ? date('d/m/Y', strtotime($offre['dateActualisation'])) : 'N/A' ?>
                                                </p>
                                                <a href="<?= $this->escape($offre['origineOffre']['urlOrigine'] ?? '#') ?>"
                                                    target="_blank" class="btn btn-primary btn-sm">Voir l'offre originale</a>
                                            </div>

                                            <!-- Onglet Description -->
                                            <div class="tab-pane fade" id="desc-<?= $idx ?>" role="tabpanel"
                                                aria-labelledby="desc-tab-<?= $idx ?>">
                                                <h6>Description du poste</h6>
                                                <p><?= nl2br($this->escape($offre['description'] ?? 'Pas de description')) ?>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <!-- Badges infos -->
                                <div class="d-flex flex-wrap gap-2 mt-2">
                                    <span
                                        class="badge bg-primary"><?= $this->escape($offre['entreprise']['nom'] ?? 'Entreprise inconnue') ?></span>
                                    <span
                                        class="badge bg-secondary"><?= $this->escape($offre['lieuTravail']['libelle'] ?? 'Lieu inconnu') ?></span>
                                    <span
                                        class="badge bg-success"><?= $this->escape($offre['typeContrat'] ?? 'Contrat N/A') ?></span>
                                </div>
                            </div>

                            <div class="d-flex flex-column gap-2">
                                <!-- Bouton Enregistrer -->
                                <button type="button" class="btn btn-outline-secondary btn-sm btn-enregistrer"
                                    title="Enregistrer l'offre" data-libelle="<?= htmlspecialchars($offre['intitule'] ?? '') ?>"
                                    data-url="<?= htmlspecialchars($offre['origineOffre']['urlOrigine'] ?? '') ?>"
                                    data-dateactualisation="<?= htmlspecialchars($offre['dateActualisation'] ?? '') ?>"
                                    data-lat="<?= htmlspecialchars($offre['lieuTravail']['latitude'] ?? '') ?>"
                                    data-lon="<?= htmlspecialchars($offre['lieuTravail']['longitude'] ?? '') ?>"
                                    data-identifiant_offre="<?= htmlspecialchars($offre['id'] ?? '') ?>" data-module="offres">
                                    <i class="fa-solid fa-floppy-disk"></i>
                                </button>

                                <!-- Bouton Envoyer par mail -->
                                <?php $url = $this->escape($offre['origineOffre']['urlOrigine'] ?? '#'); ?>
                                <a href="mailto:destinataire@example.com?subject=Offre: <?= $this->escape($offre['intitule'] ?? '') ?>&body=Voici le lien vers l'offre : <?= $url ?>"
                                    class="btn btn-outline-secondary btn-sm" title="Envoyer l'offre par email">
                                    <i class="fa-solid fa-envelope"></i>
                                </a>


                                <!-- Bouton Voir sur la carte -->
                                <?php $hasCoords = !empty($offre['lieuTravail']['latitude']) && !empty($offre['lieuTravail']['longitude']); ?>
                                <button type="button"
                                    class="btn btn-outline-secondary btn-sm btn-voir-carte <?= $hasCoords ? '' : 'disabled' ?>"
                                    title="Voir sur la carte" <?= $hasCoords ? "data-offre-idx=\"$idx\"" : '' ?>>
                                    <i class="fa-solid fa-location-dot"></i>
                                </button>

                                <!-- Lien France Travail -->
                                <?php $url = $this->escape($offre['origineOffre']['urlOrigine'] ?? '#'); ?>
                                <a href="<?= $url ?>" target="_blank" title="Voir l'offre originale"
                                    class="btn btn-outline-secondary btn-sm d-flex flex-column align-items-center justify-content-center"
                                    style="min-width:50px; line-height:1.1;">
                                    <span class="small">France</span>
                                    <span class="small">Travail</span>
                                </a>
                            </div>
                        </div>
                    </div> <?php endforeach; ?>
            </div>
            <!-- Pagination-->
            <?php
            $currentPage = $this->page;
            $params = $this->params;
            $perPage = $this->perPage;
            $offresCount = count($this->offres ?? []);

            $hasNextPage = $offresCount === $perPage;

            $window = 2;

            // Pages à afficher
            $pages = [];
            for ($i = max(0, $currentPage - $window); $i <= $currentPage + $window; $i++) {
                if ($i === $currentPage + 1 && !$hasNextPage) break;
                $pages[] = $i;
            }
            ?>

            <nav aria-label="Pagination" class="pagination-sticky">
                <ul class="pagination justify-content-center mb-0">
                    <li class="page-item <?= ($currentPage <= 0) ? 'disabled' : '' ?>">
                        <a class="page-link"
                            href="<?= ($currentPage > 0) ? '?' . http_build_query(array_merge($params, ['page' => $currentPage - 1])) : '#' ?>">
                            &laquo; Précédent
                        </a>
                    </li>
                    <?php foreach ($pages as $i): ?>
                        <li class="page-item <?= ($i === $currentPage) ? 'active' : '' ?>">
                            <a class="page-link"
                                href="<?= ($i === $currentPage) ? '#' : '?' . http_build_query(array_merge($params, ['page' => $i])) ?>">
                                <?= $i + 1 ?>
                            </a>
                        </li>
                    <?php endforeach; ?>
                    <li class="page-item <?= !$hasNextPage ? 'disabled' : '' ?>">
                        <a class="page-link"
                            href="<?= $hasNextPage ? '?' . http_build_query(array_merge($params, ['page' => $currentPage + 1])) : '#' ?>">
                            Suivant &raquo;
                        </a>
                    </li>
                </ul>
            </nav>

        <?php else: ?>
            <div class="alert alert-info">Aucune offre trouvée.</div>
        <?php endif; ?>
    </div>

    <!-- Carte -->
    <div class="col-md-9">
        <div class="card shadow-sm">
            <div class="card-body p-0">
                <div id="map" class="border rounded" style="height:80vh;"></div>
            </div>
        </div>
    </div>
</div>

<script>
    const offresData = <?= json_encode($this->offres ?? [], JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES) ?>;
    // const K = <?= json_encode($this->K) ?>;
    document.addEventListener("DOMContentLoaded", function() {
        // const filtreForm = document.querySelector('form'); // ou un sélecteur plus précis si besoin

        // filtreForm.addEventListener('submit', function(e) {
        //     e.preventDefault(); // ⚡ Empêche le rechargement de la page

        //     // Récupérer les valeurs des filtres
        //     const projetSelect = document.getElementById('selectProjet').value;
        //     const motsCles = document.getElementById('motsCles').value;
        //     const commune = document.getElementById('commune').value;
        //     const distance = filtreForm.querySelector('input[name="distance"]').value;

        //     // Construire un objet avec les filtres (tu peux l'envoyer en AJAX)
        //     const filtres = {
        //         projet: projetSelect,
        //         motsCles: motsCles,
        //         commune: commune,
        //         distance: distance
        //     };

        //     console.log('Filtres soumis :', filtres);

        // });

        // console.log(K);

        console.log('nombre offres reçus : ', offresData);

        const map = L.map("map").setView([46.5, 2.5], 6);
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
            attribution: "© OpenStreetMap",
            maxZoom: 18
        }).addTo(map);

        const markerNormal = L.icon({
            iconUrl: 'https://cdn-icons-png.flaticon.com/512/684/684908.png',
            iconSize: [30, 30],
            iconAnchor: [15, 30],
            popupAnchor: [0, -30]
        });
        const markerActive = L.icon({
            iconUrl: 'https://cdn-icons-png.flaticon.com/512/684/684906.png',
            iconSize: [30, 30],
            iconAnchor: [15, 30],
            popupAnchor: [0, -30]
        });

        const markers = L.markerClusterGroup();
        const markerMap = {}; // idx d'offre => marker

        offresData.forEach((offre, idx) => {
            if (offre.lieuTravail?.latitude && offre.lieuTravail?.longitude) {
                const marker = L.marker([offre.lieuTravail.latitude, offre.lieuTravail.longitude], {
                    icon: markerNormal
                }).bindPopup(`
                <strong>${offre.intitule || 'Sans titre'}</strong><br>
                ${offre.entreprise?.nom || 'Entreprise inconnue'}<br>
                ${offre.lieuTravail?.libelle || ''}<br>
                <a href="${offre.origineOffre?.urlOrigine || '#'}" target="_blank">Voir l'offre</a>
            `);
                markers.addLayer(marker);
                markerMap[idx] = marker;
            }
        });

        map.addLayer(markers);
        if (markers.getLayers().length) map.fitBounds(markers.getBounds());

        // Bouton "Voir sur la carte"
        document.querySelectorAll('.btn-voir-carte').forEach(btn => {
            const idx = btn.getAttribute('data-offre-idx');
            const marker = markerMap[idx];

            // Si pas de marker, on désactive le bouton
            if (!marker) {
                btn.classList.add('disabled');
                btn.setAttribute('title', 'Localisation indisponible');
                return;
            }

            btn.addEventListener('click', () => {
                if (btn.classList.contains('disabled')) return;

                // Zoom sur le marker même s'il est dans un cluster
                markers.zoomToShowLayer(marker, () => {
                    marker.setIcon(markerActive);
                    marker.openPopup();

                    // Revenir à l'icône normale après 2 secondes (optionnel)
                    setTimeout(() => {
                        marker.setIcon(markerNormal);
                        marker.closePopup();
                    }, 2000);
                });
            });
        });

        // Projet → remplir automatiquement les champs
        const selectProjet = document.getElementById('selectProjet');
        if (selectProjet) {
            selectProjet.addEventListener('change', function() {
                if (this.value) {
                    try {
                        const data = JSON.parse(this.value);
                        console.log(data);

                        if (data.metier) {
                            document.getElementById('motsCles').value = data.metier;
                        }
                        if (data.codeInsee) {
                            document.getElementById('commune').value = data.codeInsee;
                        }
                    } catch (e) {
                        console.error("Erreur JSON projet :", e);
                    }
                }
            });
        }





        // Ouvrir la modal
        let bg = document.getElementById('popover-background');
        if (!bg) {
            bg = document.createElement('div');
            bg.id = 'popover-background';
            document.body.appendChild(bg);
        }

        // Ouvrir la modal
        document.querySelectorAll('.lire-suite-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const idx = btn.dataset.offreIdx;
                const popover = document.getElementById(`customPopover-${idx}`);
                if (!popover) return;
                popover.style.display = 'block';
                bg.style.display = 'block';
            });
        });

        // Fermer la modal
        document.querySelectorAll('.fermer-popover').forEach(btn => {
            btn.addEventListener('click', () => {
                const popover = btn.closest('.blocpopover');
                if (popover) popover.style.display = 'none';
                bg.style.display = 'none';
            });
        });

        // Fermer en cliquant sur le fond
        bg.addEventListener('click', () => {
            document.querySelectorAll('.blocpopover').forEach(p => p.style.display = 'none');
            bg.style.display = 'none';
        });

    });

    $(document).on('click', '.btn-enregistrer', function() {
        const btn = $(this);

        // Récupérer le projet sélectionné dans le select
        let projetNom = '';
        const projetSelect = $('#selectProjet').val();
        if (projetSelect) {
            try {
                const data = JSON.parse(projetSelect);
                projetNom = data.nomProjet || '';
                console.log("Projet sélectionné :", projetNom);
            } catch (e) {
                console.error("Erreur JSON projet :", e);
            }
        }

        const offre = {
            libelle: btn.data('libelle'),
            projet: projetNom,
            identifiant_offre: btn.data('identifiant_offre'),
            dateActualisation: btn.data('dateactualisation'),
            url: btn.data('url'),
            longitude: btn.data('lon'),
            latitude: btn.data('lat'),
            module: btn.data('module')
        };

        console.log('Données à enregistrer :', offre);

        $.ajax({
            url: '/zf1/public/francetravailnew/enregistreroffre',
            method: 'POST',
            dataType: 'json',
            data: offre,
            success: function(res) {
                if (res.success) {
                    alert("✅ Offre enregistrée !");
                } else {
                    alert("❌ Erreur : " + (res.message || "Impossible d'enregistrer l'offre"));
                }
            },
            error: function(xhr, status, error) {
                console.error("Erreur AJAX :", status, error, xhr.responseText);
                alert("⚠️ Erreur réseau (" + status + ")");
            }
        });
    });

    // $(document).on('click', '.btn-select-projet', function() {
    //     const projet = $(this).data('projet');

    //     $.ajax({
    //         url: '/zf1/public/francetravailnew/getdashboarddata',
    //         method: 'GET',
    //         dataType: 'json',
    //         data: {
    //             projet: projet
    //         },
    //         success: function(res) {
    //             // Totaux
    //             $('.btn-filter[data-type="offres"] h4').text(res.totalOffreData || 0);
    //             $('.btn-filter[data-type="metiers"] h4').text(res.totalMetiersData || 0);
    //             $('.btn-filter[data-type="services"] h4').text(res.totalServicesData || 0);
    //             $('.btn-filter[data-type="entreprises"] h4').text(res.totalEntreprisesData || 0);

    //             // Left panel
    //             const panel = $('#left-panel');
    //             panel.empty();
    //             if (!res.offresData.length) {
    //                 panel.text('Aucune offre pour ce projet.');
    //             } else {
    //                 res.offresData.forEach(offre => {
    //                     panel.append(`<div>${offre.libelle}</div>`);
    //                 });
    //             }

    //             // Carte
    //             markers.clearLayers();
    //             res.offresData.forEach((offre, idx) => {
    //                 if (offre.latitude && offre.longitude) {
    //                     const marker = L.marker([offre.latitude, offre.longitude], {
    //                             icon: markerNormal
    //                         })
    //                         .bindPopup(`<strong>${offre.libelle}</strong>`);
    //                     markers.addLayer(marker);
    //                 }
    //             });
    //             if (markers.getLayers().length) map.fitBounds(markers.getBounds());
    //         },
    //         error: function(err) {
    //             console.error("Erreur AJAX dashboard :", err);
    //         }
    //     });
    // });
</script>